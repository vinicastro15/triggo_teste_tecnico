# -*- coding: utf-8 -*-
"""triggo-TesteTecnicoVinicius.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i1Euulk4Stm16j7jHRw8HMUKpLMXlw1-
"""


import pandas as pd
import numpy as np


customers = pd.read_csv('olist_customers_dataset.csv')
#visualização de linhas
print(customers.head())
#informações sobre o data set
print(customers.info())
#estaísticas decritivas
print(customers.describe(include='all'))

#limpeza da dados
print(customers.isnull().sum())

# Verificar duplicatas
print(f"Número de duplicatas: {customers.duplicated().sum()}")

# Remover duplicatas se houver
customers.drop_duplicates(inplace=True)

# Verificar duplicatas em customer_unique_id (deve ser único)
print(f"Clientes únicos duplicados: {customers['customer_unique_id'].duplicated().sum()}")

# Normalizar nomes de cidades e estados (colocar em maiúsculas)
customers['customer_city'] = customers['customer_city'].str.upper()
customers['customer_state'] = customers['customer_state'].str.upper()

# Verificar valores únicos para estados
print(customers['customer_state'].unique())

# Padronizar códigos postais (certificar que são strings e têm 5 dígitos)
customers['customer_zip_code_prefix'] = customers['customer_zip_code_prefix'].astype(str).str.zfill(5)

# Normalizar nomes de cidades e estados (colocar em maiúsculas)
customers['customer_city'] = customers['customer_city'].str.upper()
customers['customer_state'] = customers['customer_state'].str.upper()

# Verificar valores únicos para estados
print(customers['customer_state'].unique())

# Padronizar códigos postais (certificar que são strings e têm 5 dígitos)
customers['customer_zip_code_prefix'] = customers['customer_zip_code_prefix'].astype(str).str.zfill(5)

